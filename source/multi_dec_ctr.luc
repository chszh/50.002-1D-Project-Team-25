module multi_dec_ctr #(
    DIGITS = 4 : DIGITS >= 2  // number of digits
  ) (
    input clk,                // clock
    input rst,                // reset
    input inc_p1,                // increment counter
    input inc_p2,
    output digits[DIGITS][4]  // digit values
  ) {
  
  .clk(clk), .rst(rst) {
    decimal_counter dctr [DIGITS]; // digit counters
  }

  always {
    if (inc_p1){
      dctr.inc[0] = inc_p1;
    }
    if (inc_p2){
      dctr.inc[2] = inc_p2;
    }
    digits = dctr.value; // output the values
    
    // if the previous digit overflows, increment the next
    dctr.inc[1] = dctr.ovf[0];
    dctr.inc[3] = dctr.ovf[2];
  }
}
